default_platform(:ios)

DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]
GH_TOKEN = ENV["GH_TOKEN"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do
  lane :betaGithub do
    keychain_name = TEMP_KEYCHAIN_USER
    keychain_password = TEMP_KEYCHAIN_PASSWORD
    ensure_temp_keychain(keychain_name, keychain_password)

    api_key = app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      duration: 1200,
      in_house: false
    )

    increment_build_number(xcodeproj: "Memmy.xcodeproj")

    build_number = get_build_number
    version_number = get_version_number

    changelog = read_changelog(
      changelog_path: '../CHANGELOG.md',
      section_identifier: '[Unreleased]',
      excluded_markdown_elements: ['-', '###']
    )

    cocoapods(
      clean_install: true
    )

    match(
      type: 'appstore',
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      api_key: api_key
    )

    gym(
      configuration: "Release",
      workspace: "Memmy.xcworkspace",
      scheme: "Memmy",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
	      DEVELOPER_APP_ID => PROVISIONING_PROFILE_SPECIFIER
	    }
      }
    )

    pilot(
      apple_id: "#{DEVELOPER_APP_ID}",
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      skip_waiting_for_build_processing: false,
      skip_submission: false,
      distribute_external: true,
      notify_external_testers: true,
      groups: [
	    "Internal",
      ],
      ipa: "./Memmy.ipa"
    )

    stamp_changelog(
      changelog_path: "../CHANGELOG.md",
      section_identifier: "Version #{version_number} (#{build_number})",
      should_stamp_date: true,
      stamp_datetime_format: "%FT%TZ"
    )

    commit_github_file(
      repository_name: "Memmy-App/memmy",
      server_url: "https://api.github.com",
      api_token: GH_TOKEN,
      message: "[bot] Update Changelog",
      branch: "main",
      path: "CHANGELOG.md"
    )

    delete_temp_keychain(keychain_name)
  end
end

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    increment_build_number(xcodeproj: "Memmy.xcodeproj")
    version_number = get_version_number
    build_number = get_build_number
    changelog = read_changelog(
      changelog_path: '../CHANGELOG.md',
      section_identifier: '[Unreleased]',
      excluded_markdown_elements: ['-', '###']
    )
    build_app(
      workspace: "Memmy.xcworkspace",
      scheme: "Memmy",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.gkasdorf.memmyapp" => "match AppStore com.gkasdorf.memmyapp 1698187990"
        }
      }
    )
    upload_to_testflight(
      localized_build_info: {
        "default": {
          whats_new: changelog,
        }
      },
      distribute_external: true,
      groups: [
        "Alpha",
        "Internal",
      ]
    )
    stamp_changelog(
      changelog_path: '../CHANGELOG.md',
      section_identifier: "Version #{version_number} (#{build_number})",
      should_stamp_date: true,
      stamp_datetime_format: '%FT%TZ'
    )
  end
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :betaInternal do
    increment_build_number(xcodeproj: "Memmy.xcodeproj")
    build_app(workspace: "Memmy.xcworkspace", scheme: "Memmy")
    upload_to_testflight(
      localized_build_info: {
        "default": {
          whats_new: "Here's some more changes for you all!",
        }
      },
      distribute_external: true,
      groups: [
        "Internal",
      ]
    )
  end
end

platform :ios do
  desc "Bump version and update changelog"
  lane :bump do
    increment_build_number(xcodeproj: "Memmy.xcodeproj")
    version_number = get_version_number
    build_number = get_build_number
    stamp_changelog(
      changelog_path: '../CHANGELOG.md',
      section_identifier: "Version #{version_number} (#{build_number})",
      should_stamp_date: true,
      stamp_datetime_format: '%FT%TZ'
    )
  end
end

